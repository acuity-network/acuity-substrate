[package]
authors.workspace = true
build = 'build.rs'
description = "Implementation of an Acuity node in Rust based on the Substrate framework."
edition.workspace = true
homepage.workspace = true
repository.workspace = true
license = "GPL-3.0-only"
name = 'node-cli'
version = '2.0.0'
publish = false
default-run = "acuity"

[lints]
workspace = true

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[badges]
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "acuity-network/acuity-substrate" }
is-it-maintained-open-issues = { repository = "acuity-network/acuity-substrate" }

[[bin]]
name = "acuity"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
array-bytes = { workspace = true, default-features = true }
clap = { features = ["derive"], optional = true, workspace = true }
codec = { workspace = true, default-features = true }
serde = { features = ["derive"], workspace = true, default-features = true }
jsonrpsee = { features = ["server"], workspace = true }
futures = { workspace = true }
log = { workspace = true, default-features = true }
rand = { workspace = true, default-features = true }
serde_json = { workspace = true, default-features = true }
acuity-runtime.workspace = true
node-rpc.workspace = true
node-primitives.workspace = true
node-primitives.default-features = true
node-inspect = { optional = true, workspace = true, default-features = true }

# primitives
sp-authority-discovery.workspace = true
sp-application-crypto.workspace = true
sp-consensus-babe.workspace = true
sp-consensus-beefy.workspace = true
sp-consensus-grandpa.workspace = true
sp-crypto-hashing.workspace = true
sp-externalities.workspace = true
sp-genesis-builder.workspace = true
sp-mixnet.workspace = true
sp-api.workspace = true
sp-core.workspace = true
sp-runtime.workspace = true
sp-state-machine.workspace = true
sp-statement-store.workspace = true
sp-timestamp.workspace = true
sp-trie.workspace = true
sp-mmr-primitives.workspace = true
sp-inherents.workspace = true
sp-keyring.workspace = true
sp-keystore.workspace = true
sp-block-builder.workspace = true
sp-blockchain.workspace = true
sp-consensus.workspace = true
sp-tracing.workspace = true
sp-transaction-pool.workspace = true
sp-transaction-storage-proof.workspace = true
sp-io.workspace = true

# client dependencies
sc-cli.workspace = true
sc-client-api.workspace = true
sc-chain-spec.workspace = true
sc-consensus.workspace = true
sc-consensus-epochs.workspace = true
sc-keystore.workspace = true
sc-transaction-pool.workspace = true
sc-transaction-pool-api.workspace = true
sc-statement-store.workspace = true
sc-mixnet.workspace = true
sc-network.workspace = true
sc-network-common.workspace = true
sc-network-sync.workspace = true
sc-network-statement.workspace = true
sc-offchain.workspace = true
sc-consensus-slots.workspace = true
sc-consensus-babe.workspace = true
sc-consensus-beefy.workspace = true
sc-consensus-babe-rpc.workspace = true
sc-consensus-grandpa.workspace = true
sc-consensus-grandpa-rpc.workspace = true
sc-rpc.workspace = true
sc-rpc-api.workspace = true
sc-basic-authorship.workspace = true
sc-service.workspace = true
sc-telemetry.workspace = true
sc-executor.workspace = true
sc-authority-discovery.workspace = true
sc-sync-state-rpc.workspace = true
sc-sysinfo.workspace = true
sc-storage-monitor.workspace = true

# frame dependencies
frame-metadata-hash-extension.workspace = true
frame-support.workspace = true
frame-system.workspace = true
frame-system-rpc-runtime-api.workspace = true
pallet-asset-conversion-tx-payment.workspace = true
pallet-balances.workspace = true
pallet-timestamp.workspace = true
pallet-transaction-payment.workspace = true
pallet-transaction-payment-rpc.workspace = true
pallet-treasury.workspace = true
pallet-im-online.workspace = true
pallet-root-testing.workspace = true
pallet-skip-feeless-payment.workspace = true
pallet-sudo.workspace = true
substrate-frame-rpc-system.workspace = true
frame-benchmarking.workspace = true
frame-benchmarking-cli.workspace = true
mmr-gadget.workspace = true

[dev-dependencies]
futures = { workspace = true }
tempfile = { workspace = true }
assert_cmd = { workspace = true }
nix = { features = ["signal"], workspace = true }
regex = { workspace = true }
platforms = { workspace = true }
soketto = { workspace = true }
criterion = { features = ["async_tokio"], workspace = true, default-features = true }
tokio = { features = ["macros", "parking_lot", "time"], workspace = true, default-features = true }
tokio-util = { features = ["compat"], workspace = true }
wait-timeout = { workspace = true }
wat = { workspace = true }
serde_json = { workspace = true, default-features = true }
scale-info = { features = ["derive", "serde"], workspace = true, default-features = true }
pretty_assertions.workspace = true

# These testing-only dependencies are not exported by the Polkadot-SDK crate:
node-testing = { path = "../testing" }
sc-service-test = { workspace = true }

[build-dependencies]
clap = { optional = true, workspace = true }
clap_complete = { optional = true, workspace = true }
node-inspect = { optional = true, workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true }
substrate-build-script-utils = { workspace = true }
# substrate-frame-cli = { optional = true, workspace = true }
# try-runtime-cli = { optional = true, workspace = true }
sc-cli = { workspace = true }
sc-storage-monitor = { workspace = true }
# pallet-balances = "27.0.0"

[features]
default = ["cli"]
cli = [
	"clap",
	"clap_complete",
	"node-inspect",
]
runtime-benchmarks = [
	"acuity-runtime/runtime-benchmarks",
	"node-inspect?/runtime-benchmarks",
]
try-runtime = [
	"acuity-runtime/try-runtime",
]
riscv = [
	"acuity-runtime/riscv",
]

[[bench]]
name = "transaction_pool"
harness = false

[[bench]]
name = "block_production"
harness = false

[[bench]]
name = "executor"
harness = false
